/**
 * Portal API
 * RC Portal
 *
 * OpenAPI spec version: v1
 * Contact: ifx@fas.harvard.edu
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.0-SNAPSHOT
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.PortalApi);
  }
}(this, function(expect, PortalApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new PortalApi.BuildReportText();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('BuildReportText', function() {
    it('should create an instance of BuildReportText', function() {
      // uncomment below and update the code to test BuildReportText
      //var instance = new PortalApi.BuildReportText();
      //expect(instance).to.be.a(PortalApi.BuildReportText);
    });

    it('should have the property name (base name: "name")', function() {
      // uncomment below and update the code to test the property name
      //var instance = new PortalApi.BuildReportText();
      //expect(instance).to.be();
    });

    it('should have the property version (base name: "version")', function() {
      // uncomment below and update the code to test the property version
      //var instance = new PortalApi.BuildReportText();
      //expect(instance).to.be();
    });

    it('should have the property details (base name: "details")', function() {
      // uncomment below and update the code to test the property details
      //var instance = new PortalApi.BuildReportText();
      //expect(instance).to.be();
    });

    it('should have the property activation (base name: "activation")', function() {
      // uncomment below and update the code to test the property activation
      //var instance = new PortalApi.BuildReportText();
      //expect(instance).to.be();
    });

    it('should have the property comments (base name: "comments")', function() {
      // uncomment below and update the code to test the property comments
      //var instance = new PortalApi.BuildReportText();
      //expect(instance).to.be();
    });

    it('should have the property buildOrder (base name: "build_order")', function() {
      // uncomment below and update the code to test the property buildOrder
      //var instance = new PortalApi.BuildReportText();
      //expect(instance).to.be();
    });

    it('should have the property isLatest (base name: "is_latest")', function() {
      // uncomment below and update the code to test the property isLatest
      //var instance = new PortalApi.BuildReportText();
      //expect(instance).to.be();
    });

    it('should have the property appName (base name: "app_name")', function() {
      // uncomment below and update the code to test the property appName
      //var instance = new PortalApi.BuildReportText();
      //expect(instance).to.be();
    });

    it('should have the property buildStack (base name: "build_stack")', function() {
      // uncomment below and update the code to test the property buildStack
      //var instance = new PortalApi.BuildReportText();
      //expect(instance).to.be();
    });

    it('should have the property buildDependencies (base name: "build_dependencies")', function() {
      // uncomment below and update the code to test the property buildDependencies
      //var instance = new PortalApi.BuildReportText();
      //expect(instance).to.be();
    });

    it('should have the property runDependencies (base name: "run_dependencies")', function() {
      // uncomment below and update the code to test the property runDependencies
      //var instance = new PortalApi.BuildReportText();
      //expect(instance).to.be();
    });

    it('should have the property buildDate (base name: "build_date")', function() {
      // uncomment below and update the code to test the property buildDate
      //var instance = new PortalApi.BuildReportText();
      //expect(instance).to.be();
    });

    it('should have the property title (base name: "title")', function() {
      // uncomment below and update the code to test the property title
      //var instance = new PortalApi.BuildReportText();
      //expect(instance).to.be();
    });

    it('should have the property description (base name: "description")', function() {
      // uncomment below and update the code to test the property description
      //var instance = new PortalApi.BuildReportText();
      //expect(instance).to.be();
    });

  });

}));
